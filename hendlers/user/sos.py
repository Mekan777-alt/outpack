from aiogram.dispatcher.filters.state import StatesGroup, State
from config import bot, dp, db, BRON_CHANNEL
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove
from hendlers.admin.add import submit_markup, all_right_message, cancel_message
from aiogram.types import Message
from filters import IsUser
from hendlers.user.reserved import send_phone
from aiogram.types import ContentType
from hendlers.user.catalog import btnnaz
from app import sos, btnMenu, btnbar, btnTime, btnBrn, btndlv

message_to = "‚úâ –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"
phone = "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å"
back_message = 'üëà –ù–∞–∑–∞–¥'


class SosState(StatesGroup):
    question = State()
    phone_number = State()
    submit = State()


@dp.message_handler(IsUser(), text=sos)
async def command_start(message: Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(message_to, phone)
    markup.add(btnnaz)
    await message.answer("–ö–∞–∫ —Ö–æ—Ç–∏—Ç–µ —Å –Ω–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è", reply_markup=markup)


@dp.message_handler(IsUser(), text=phone)
async def command_phone(message: Message):
    await message.answer("–°–≤—è–∂–∏—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å –Ω–∞–º–∏ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
                         "+7 (843) 266‚Äí11‚Äí11")


@dp.message_handler(IsUser(), text=message_to)
async def command_message(message: Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(back_message)
    await SosState.question.set()
    await message.answer('–í —á–µ–º —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã? –û–ø–∏—à–∏—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–µ–µ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–º –æ—Ç–≤–µ—Ç–∏—Ç.',
                         reply_markup=markup)


@dp.message_handler(IsUser(), state=SosState.question)
async def procces_phone(message: Message, state: FSMContext):
    async with state.proxy() as data:
        if message.text != back_message:
            data['question'] = message.text
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.", reply_markup=send_phone)
            await SosState.next()
        else:
            markup = ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(btnMenu, btnbar, btnTime)
            markup.add(btnBrn, btndlv, sos)
            await message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ!', reply_markup=markup)
            await state.finish()


@dp.message_handler(IsUser(), state=SosState.phone_number)
async def process_question(message: Message, state: FSMContext):
    async with state.proxy() as data:
        data['phone_number'] = message.text

    await message.answer('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –≤–µ—Ä–Ω–æ.', reply_markup=submit_markup())
    await SosState.next()


@dp.message_handler(content_types=ContentType.CONTACT, state=SosState.phone_number)
async def process_question(message: Message, state: FSMContext):
    async with state.proxy() as data:
        data['phone_number'] = message.contact['phone_number']

    await message.answer('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –≤–µ—Ä–Ω–æ.', reply_markup=submit_markup())
    await SosState.next()


@dp.message_handler(lambda message: message.text not in [cancel_message, all_right_message], state=SosState.submit)
async def process_price_invalid(message: Message):
    await message.answer('–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ.')


@dp.message_handler(text=cancel_message, state=SosState.submit)
async def process_cancel(message: Message, state: FSMContext):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(btnMenu, btnbar, btnTime)
    markup.add(btnBrn, btndlv, sos)
    await message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ!', reply_markup=markup)
    await state.finish()


@dp.message_handler(text=all_right_message, state=SosState.submit)
async def process_submit(message: Message, state: FSMContext):
    cid = message.chat.id
    async with state.proxy() as data:
        db.query('INSERT INTO questions VALUES (?, ?)',
                 (cid, data['question']))
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(btnMenu, btnbar, btnTime)
        markup.add(btnBrn, btndlv, sos)
        await message.answer('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', reply_markup=markup)
        await bot.send_message(BRON_CHANNEL, "SOS\n"
                                             "\n"
                                             f"–í–æ–ø—Ä–æ—Å: {data['question']}\n"
                                             f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {data['phone_number']}")

    await state.finish()
